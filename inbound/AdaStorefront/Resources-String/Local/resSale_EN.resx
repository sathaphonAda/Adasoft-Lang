<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="tChgQty" xml:space="preserve">
    <value>Change Quantity</value>
  </data>
  <data name="tFavor" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="tGroupPdt" xml:space="preserve">
    <value>Product group</value>
  </data>
  <data name="tGrpCst" xml:space="preserve">
    <value>Group Cst</value>
  </data>
  <data name="tModeScan" xml:space="preserve">
    <value>Mode Scan</value>
  </data>
  <data name="tModeTouch" xml:space="preserve">
    <value>Mode Touchscreen</value>
  </data>
  <data name="tMsgCantBack" xml:space="preserve">
    <value>Can not back if there are some items in bill</value>
  </data>
  <data name="tMsgCantSelectCst" xml:space="preserve">
    <value>Can not select new customers if there are some items on the bil</value>
  </data>
  <data name="tMsgCantSO" xml:space="preserve">
    <value>Can not select sale order if there are some items on the bil</value>
  </data>
  <data name="tMsgErrRetrunBill" xml:space="preserve">
    <value>This bill has been refunded !!!</value>
  </data>
  <data name="tMsgNotFoundPdt" xml:space="preserve">
    <value>Not found data or not defenined yet.</value>
  </data>
  <data name="tNewQty" xml:space="preserve">
    <value>New Quantity</value>
  </data>
  <data name="tOldQty" xml:space="preserve">
    <value>Old Quantity</value>
  </data>
  <data name="tPage" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="tPriGrp" xml:space="preserve">
    <value>Price Group</value>
  </data>
  <data name="tRefer" xml:space="preserve">
    <value>Refer to bill</value>
  </data>
  <data name="tRental" xml:space="preserve">
    <value>Rental</value>
  </data>
  <data name="tSale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="tScan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="tSelectCst" xml:space="preserve">
    <value>Please Select Customer</value>
  </data>
  <data name="tSortAZ" xml:space="preserve">
    <value>Sort A-Z</value>
  </data>
  <data name="tSortZA" xml:space="preserve">
    <value>Sort Z-A</value>
  </data>
  <data name="tTelephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="tTitleExpd" xml:space="preserve">
    <value>Expired Date :</value>
  </data>
  <data name="tTitlePoint" xml:space="preserve">
    <value>Point Balance:</value>
  </data>
  <data name="tTitlePriLev" xml:space="preserve">
    <value>Price Level :</value>
  </data>
  <data name="tTitleReferBill" xml:space="preserve">
    <value>Return Sale</value>
  </data>
  <data name="tTitleSO" xml:space="preserve">
    <value>Sale Order :</value>
  </data>
  <data name="tViewPdtImg" xml:space="preserve">
    <value>Image product</value>
  </data>
  <data name="tViewPdtList" xml:space="preserve">
    <value>List product</value>
  </data>
  <data name="tRefund" xml:space="preserve">
    <value>Refund</value>
  </data>
  <data name="tTitleReferBillRtn" xml:space="preserve">
    <value>Refer Bliil Return</value>
  </data>
  <data name="tMsgPdtQtyBalance" xml:space="preserve">
    <value>Product balance</value>
  </data>
  <data name="tMsgPdtQtyDef" xml:space="preserve">
    <value>Not enough products !!!</value>
  </data>
  <data name="tMsgStockNotFoundPdt" xml:space="preserve">
    <value>Not found data in Stock !!!</value>
  </data>
  <data name="tPmtAdjPrice" xml:space="preserve">
    <value>Adjust Price</value>
  </data>
  <data name="tPmtDis" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="tPmtFree" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="tPmtPriGrp" xml:space="preserve">
    <value>New Price Group</value>
  </data>
  <data name="tMsgSoPdtNotFound" xml:space="preserve">
    <value>Can not process !!!  Because Product information not found</value>
  </data>
  <data name="tMsgNoEditItemRet" xml:space="preserve">
    <value>Not Allow to add/edit item when ref SaleDoc.</value>
  </data>
  <data name="tMsgErrReferBill" xml:space="preserve">
    <value>This bill has been refered !!!</value>
  </data>
  <data name="tMsgReferBillNotFound" xml:space="preserve">
    <value>Not found this bill !!!</value>
  </data>
  <data name="tTitleVehVIN" xml:space="preserve">
    <value>Serial Number</value>
  </data>
  <data name="tMsgDiffPriLev" xml:space="preserve">
    <value>Difference price level cannot change (just change by cancel document)</value>
  </data>
  <data name="tTitleLevel" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="tTitleEvent" xml:space="preserve">
    <value>The following events occur:</value>
  </data>
  <data name="tTitleMsgRcvPayZero" xml:space="preserve">
    <value>Receive zero payment for total products</value>
  </data>
</root>