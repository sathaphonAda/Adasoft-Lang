<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tCalPmt" xml:space="preserve">
    <value>Checking Promotion</value>
  </data>
  <data name="tDateCompare" xml:space="preserve">
    <value>Date compare</value>
  </data>
  <data name="tDownload" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="tLastDate" xml:space="preserve">
    <value>Last Date</value>
  </data>
  <data name="tMsgUldConnError" xml:space="preserve">
    <value>Connection failed, sales cannot be sent to headquarters !!!</value>
  </data>
  <data name="tMsgUldConnSucc" xml:space="preserve">
    <value>The system is sending sales data to the headquarters system. Please wait ...</value>
  </data>
  <data name="tRecentUpdate" xml:space="preserve">
    <value>Check from last sync</value>
  </data>
  <data name="tSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="tSelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="tSetupPos" xml:space="preserve">
    <value>Setup Pos</value>
  </data>
  <data name="tShiftNow" xml:space="preserve">
    <value>Shift Now</value>
  </data>
  <data name="tStaNoDocUploadSale" xml:space="preserve">
    <value>Status : All documents sale have been uploaded.</value>
  </data>
  <data name="tStaNoDocUploadShift" xml:space="preserve">
    <value>Status : All documents Shif have been uploaded.</value>
  </data>
  <data name="tStaNoDocUploadVoid" xml:space="preserve">
    <value>Status : All documents Void DT have been uploaded.</value>
  </data>
  <data name="tStaUploadSale" xml:space="preserve">
    <value>Status : Upload Sale-Refund</value>
  </data>
  <data name="tStaUploadShift" xml:space="preserve">
    <value>Status : Upload Shift</value>
  </data>
  <data name="tStaUploadVoid" xml:space="preserve">
    <value>Status : Upload Void DT</value>
  </data>
  <data name="tSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="tSycDwnError" xml:space="preserve">
    <value>Sync Download Error</value>
  </data>
  <data name="tSycDwnSuccess" xml:space="preserve">
    <value>Sync Download Success</value>
  </data>
  <data name="tTitleAutoSync" xml:space="preserve">
    <value>Waiting for Update Data</value>
  </data>
  <data name="tTitleLastDateDwn" xml:space="preserve">
    <value>Last date</value>
  </data>
  <data name="tTitleLastDateUpl" xml:space="preserve">
    <value>Last date</value>
  </data>
  <data name="tTitleNameDwn" xml:space="preserve">
    <value>Task Name</value>
  </data>
  <data name="tTitleNameUpl" xml:space="preserve">
    <value>Document No.</value>
  </data>
  <data name="tType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="tUnSuccess" xml:space="preserve">
    <value>Unsuccess</value>
  </data>
  <data name="tUpload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="tUploadSuccess" xml:space="preserve">
    <value>Upload Success</value>
  </data>
  <data name="tStaGetFixDoc" xml:space="preserve">
    <value>Status : Get Check Docs to HQ</value>
  </data>
  <data name="tStaUploadFixDoc" xml:space="preserve">
    <value>Status : Upload Check Docs to HQ</value>
  </data>
  <data name="tTitleItemFixDoc" xml:space="preserve">
    <value>Resend Document</value>
  </data>
  <data name="tTitleStopUpdSale" xml:space="preserve">
    <value>Stop Upload ?</value>
  </data>
  <data name="tUploadCloseShf" xml:space="preserve">
    <value>Upload Data After Close shift</value>
  </data>
  <data name="tTitleChkUpd" xml:space="preserve">
    <value>Checking for updates</value>
  </data>
  <data name="tPrgsTxt_0" xml:space="preserve">
    <value>Prepare User Data</value>
  </data>
  <data name="tPrgsTxt_10" xml:space="preserve">
    <value>Check Fix Doc Data</value>
  </data>
  <data name="tPrgsTxt_20" xml:space="preserve">
    <value>Prepare Product price</value>
  </data>
  <data name="tPrgsTxt_30" xml:space="preserve">
    <value>Prepare Product Data</value>
  </data>
  <data name="tPrgsTxt_40" xml:space="preserve">
    <value>Prepare Promotion</value>
  </data>
  <data name="tPrgsTxt_5" xml:space="preserve">
    <value>Prepare Pos</value>
  </data>
  <data name="tPrgsTxt_50" xml:space="preserve">
    <value>Prepare Slip Data</value>
  </data>
  <data name="tPrgsTxt_60" xml:space="preserve">
    <value>Update Database</value>
  </data>
  <data name="tPrgsTxt_70" xml:space="preserve">
    <value>Prepare Redeem Data</value>
  </data>
  <data name="tPrgsTxt_80" xml:space="preserve">
    <value>Prepare Coupon Data</value>
  </data>
  <data name="tPrgsTxt_90" xml:space="preserve">
    <value>Prepare Sale System</value>
  </data>
  <data name="tTitleSetupPos" xml:space="preserve">
    <value>Setting up</value>
  </data>
  <data name="tExportBill" xml:space="preserve">
    <value>Export Bill</value>
  </data>
  <data name="tExportBillError" xml:space="preserve">
    <value>Export Bill Error</value>
  </data>
  <data name="tExportBillSuccess" xml:space="preserve">
    <value>Export Bill Success</value>
  </data>
  <data name="tStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="tSyncDelAll" xml:space="preserve">
    <value>Delete old data</value>
  </data>
  <data name="tTitleInitSys" xml:space="preserve">
    <value>Initial the System</value>
  </data>
  <data name="tAddPdtUnSuccess" xml:space="preserve">
    <value>Add product unsuccess.</value>
  </data>
  <data name="tMsgTimeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="tUploadPdt" xml:space="preserve">
    <value>Sending product information to system. Please wait...</value>
  </data>
  <data name="tUploadPdtSuccess" xml:space="preserve">
    <value>Send product information to the system sucess.</value>
  </data>
  <data name="tUploadPdtUnSuccess" xml:space="preserve">
    <value>Send product information to the system unsucess.</value>
  </data>
</root>